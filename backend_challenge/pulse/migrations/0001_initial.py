# Generated by Django 2.0.6 on 2018-06-09 06:34

import backend_challenge.pulse.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pulse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="The name of the pulse (e.g. 'My Awesome Pulse')", max_length=300)),
                ('type', models.CharField(choices=[('primitive', 'Primitive'), ('corpse', 'CORPSE'), ('gaussian', 'Gaussian'), ('cinbb', 'CinBB'), ('cinsk', 'CinSK')], default='primitive', help_text='The type of pulse. Valid pulse types are: primitive, corpse,gaussian, cinbb, cinsk', max_length=50)),
                ('maximum_rabi_rate', models.FloatField(default=0, help_text='A floating-point number between 0 and 100', validators=[backend_challenge.pulse.validators.rambi_rate_min,backend_challenge.pulse.validators.rambi_rate_max])),
                ('polar_angle', models.FloatField(default=0, help_text='A floating-point number between 0 and 1', validators=[backend_challenge.pulse.validators.polar_angle_min,backend_challenge.pulse.validators.polar_angle_max])),
            ],
        ),
    ]
